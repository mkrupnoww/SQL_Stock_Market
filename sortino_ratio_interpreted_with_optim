WITH dayly_over_sums AS (
    SELECT
        DATE_TRUNC('day', exit_date)::date AS date_day,
        SUM(profit_loss_fee) AS day_sumover
    FROM
        test.sum
    WHERE EXTRACT(YEAR FROM exit_date) BETWEEN '1994' AND '2021' AND strategy_type = 'overnight'   
    GROUP BY
        DATE_TRUNC('day', exit_date)::date
    ORDER BY
        DATE_TRUNC('day', exit_date)::date
), dayly_int_sums AS (
    SELECT
        DATE_TRUNC('day', exit_date)::date AS date_day,
        SUM(profit_loss_fee) * 1.4 AS day_sumint
    FROM
        test.sum
    WHERE EXTRACT(YEAR FROM exit_date) BETWEEN '1994' AND '2021' AND strategy_type = 'intraday'     
    GROUP BY
        DATE_TRUNC('day', exit_date)::date
    ORDER BY
        DATE_TRUNC('day', exit_date)::date
), dayly_sums AS (
    SELECT 
        COALESCE(dos.date_day, dis.date_day) AS date_day,
        round((COALESCE(dos.day_sumover, 0) + COALESCE(dis.day_sumint, 0))::NUMERIC) AS total_sum
    FROM 
        dayly_over_sums AS dos
    FULL JOIN 
        dayly_int_sums AS dis ON dos.date_day = dis.date_day
),
cumulative_profit_loss AS (
    SELECT 
        date_day, 
        total_sum, 
        SUM(total_sum) OVER (ORDER BY date_day) AS cumulative_sum
    FROM 
        dayly_sums
),
drawdown_series AS (
    SELECT 
        date_day, 
        total_sum, 
        cumulative_sum, 
        cumulative_sum - MAX(cumulative_sum) OVER (ORDER BY date_day ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS drawdown
    FROM 
        cumulative_profit_loss
),
drawdown_final AS (
SELECT 
     round((drawdown::NUMERIC / 2000000 * 100.0), 2) drawdown_prec
FROM 
    drawdown_series
ORDER BY 
    drawdown ASC
LIMIT 1)
SELECT round(( 
(
WITH avg_year_profit AS 
(
    SELECT
        DATE_TRUNC('year', date_day)::date AS date_year,
        SUM(profit_loss_sum) AS year_sum
    FROM test.table_pnl_optim
    GROUP BY DATE_TRUNC('year', date_day)::date
    ORDER BY DATE_TRUNC('year', date_day)::date
)
SELECT round((avg(year_sum)::NUMERIC / 2000000 * 100.0), 2) AS year_sum_prec
FROM avg_year_profit)
/ drawdown_prec::NUMERIC), 2) * -1 as sharpe_ratio
FROM drawdown_final;






